{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 310
        },
        "id": "dY73GHYuvSN2",
        "outputId": "499af8cc-efe9-461b-b928-88c6e50d7022"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Nome                    E-mail         Telefone  \\\n",
              "0     Maria Silva     maria.silva@email.com  (11) 91234-5678   \n",
              "1     João Santos     joao.santos@email.com  (21) 92345-6789   \n",
              "2     Ana Pereira     ana.pereira@email.com  (31) 93456-7890   \n",
              "3  Pedro Oliveira  pedro.oliveira@email.com  (41) 94567-8901   \n",
              "4   Luiza Almeida   luiza.almeida@email.com  (51) 95678-9012   \n",
              "\n",
              "                    Curso  Custo (R$)  Custo com Desconto (R$)  \\\n",
              "0  Maquiagem Profissional         900                      720   \n",
              "1               Penteados         700                      560   \n",
              "2        Unhas Artísticas         500                      400   \n",
              "3         Estética Facial        1500                     1200   \n",
              "4       Corte e Coloração         850                      680   \n",
              "\n",
              "  Data de Inscrição  \n",
              "0        15/09/2024  \n",
              "1        20/09/2024  \n",
              "2        25/09/2024  \n",
              "3        01/10/2024  \n",
              "4        05/10/2024  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d46cb7c6-13cb-4476-953f-306784eaad32\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nome</th>\n",
              "      <th>E-mail</th>\n",
              "      <th>Telefone</th>\n",
              "      <th>Curso</th>\n",
              "      <th>Custo (R$)</th>\n",
              "      <th>Custo com Desconto (R$)</th>\n",
              "      <th>Data de Inscrição</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Maria Silva</td>\n",
              "      <td>maria.silva@email.com</td>\n",
              "      <td>(11) 91234-5678</td>\n",
              "      <td>Maquiagem Profissional</td>\n",
              "      <td>900</td>\n",
              "      <td>720</td>\n",
              "      <td>15/09/2024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>João Santos</td>\n",
              "      <td>joao.santos@email.com</td>\n",
              "      <td>(21) 92345-6789</td>\n",
              "      <td>Penteados</td>\n",
              "      <td>700</td>\n",
              "      <td>560</td>\n",
              "      <td>20/09/2024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ana Pereira</td>\n",
              "      <td>ana.pereira@email.com</td>\n",
              "      <td>(31) 93456-7890</td>\n",
              "      <td>Unhas Artísticas</td>\n",
              "      <td>500</td>\n",
              "      <td>400</td>\n",
              "      <td>25/09/2024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Pedro Oliveira</td>\n",
              "      <td>pedro.oliveira@email.com</td>\n",
              "      <td>(41) 94567-8901</td>\n",
              "      <td>Estética Facial</td>\n",
              "      <td>1500</td>\n",
              "      <td>1200</td>\n",
              "      <td>01/10/2024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luiza Almeida</td>\n",
              "      <td>luiza.almeida@email.com</td>\n",
              "      <td>(51) 95678-9012</td>\n",
              "      <td>Corte e Coloração</td>\n",
              "      <td>850</td>\n",
              "      <td>680</td>\n",
              "      <td>05/10/2024</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d46cb7c6-13cb-4476-953f-306784eaad32')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d46cb7c6-13cb-4476-953f-306784eaad32 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d46cb7c6-13cb-4476-953f-306784eaad32');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-149db456-6e92-4d8d-b9dd-ad0b1c39ed45\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-149db456-6e92-4d8d-b9dd-ad0b1c39ed45')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-149db456-6e92-4d8d-b9dd-ad0b1c39ed45 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data",
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Juliana Martins\",\n          \"Jo\\u00e3o Santos\",\n          \"Carlos Souza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E-mail\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"juliana.martins@email.com\",\n          \"joao.santos@email.com\",\n          \"carlos.souza@email.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Telefone\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"(91) 99012-3456\",\n          \"(21) 92345-6789\",\n          \"(61) 96789-0123\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Curso\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Penteados\",\n          \"Corte e Colora\\u00e7\\u00e3o\",\n          \"Unhas Art\\u00edsticas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Custo (R$)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 353,\n        \"min\": 500,\n        \"max\": 1500,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          700,\n          850,\n          500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Custo com Desconto (R$)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282,\n        \"min\": 400,\n        \"max\": 1200,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          560,\n          680,\n          400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data de Inscri\\u00e7\\u00e3o\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"20/10/2024\",\n          \"20/09/2024\",\n          \"10/10/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        " import pandas as pd\n",
        " import matplotlib.pyplot as plt\n",
        " from sklearn.model_selection import train_test_split\n",
        " from sklearn.linear_model import LinearRegression\n",
        " from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
        " data = pd.read_csv('/content/cursos_profissional1.csv')\n",
        " data.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from datetime import datetime\n",
        "\n",
        "# Dados fornecidos\n",
        "data = {\n",
        "    \"Nome\": [\"Maria Silva\", \"João Santos\", \"Ana Pereira\", \"Pedro Oliveira\", \"Luiza Almeida\"],\n",
        "    \"E-mail\": [\"maria.silva@email.com\", \"joao.santos@email.com\", \"ana.pereira@email.com\",\n",
        "               \"pedro.oliveira@email.com\", \"luiza.almeida@email.com\"],\n",
        "    \"Telefone\": [\"(11) 91234-5678\", \"(21) 92345-6789\", \"(31) 93456-7890\",\n",
        "                 \"(41) 94567-8901\", \"(51) 95678-9012\"],\n",
        "    \"Curso\": [\"Maquiagem Profissional\", \"Penteados\", \"Unhas Artísticas\", \"Estética Facial\", \"Corte e Coloração\"],\n",
        "    \"Custo (R$)\": [900, 700, 500, 1500, 850],\n",
        "    \"Custo com Desconto (R$)\": [720, 560, 400, 1200, 680],\n",
        "    \"Data de Inscrição\": [\"15/09/2024\", \"20/09/2024\", \"25/09/2024\", \"01/10/2024\", \"05/10/2024\"]\n",
        "}\n",
        "\n",
        "# Criando o DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Limpeza e pré-processamento\n",
        "# Remover espaços adicionais nos nomes e padronizar para capitalização\n",
        "df[\"Nome\"] = df[\"Nome\"].str.strip().str.title()\n",
        "df[\"E-mail\"] = df[\"E-mail\"].str.strip()\n",
        "df[\"Telefone\"] = df[\"Telefone\"].str.replace(r\"[\\(\\)\\-\\s]\", \"\", regex=True)\n",
        "df[\"Curso\"] = df[\"Curso\"].str.strip().str.title()\n",
        "df[\"Custo (R$)\"] = pd.to_numeric(df[\"Custo (R$)\"], errors='coerce')\n",
        "df[\"Custo com Desconto (R$)\"] = pd.to_numeric(df[\"Custo com Desconto (R$)\"], errors='coerce')\n",
        "df[\"Data de Inscrição\"] = pd.to_datetime(df[\"Data de Inscrição\"], format=\"%d/%m/%Y\")\n",
        "\n",
        "# Análise descritiva\n",
        "custo_stats = df[[\"Custo (R$)\", \"Custo com Desconto (R$)\"]].describe().T\n",
        "\n",
        "# Exibindo as estatísticas descritivas\n",
        "print(custo_stats)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5QEo8CFT38sy",
        "outputId": "126230ef-c32a-47e7-d2ee-b5f90fd57130"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                         count   mean         std    min    25%    50%    75%  \\\n",
            "Custo (R$)                 5.0  890.0  374.833296  500.0  700.0  850.0  900.0   \n",
            "Custo com Desconto (R$)    5.0  712.0  299.866637  400.0  560.0  680.0  720.0   \n",
            "\n",
            "                            max  \n",
            "Custo (R$)               1500.0  \n",
            "Custo com Desconto (R$)  1200.0  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.metrics import confusion_matrix\n",
        "\n",
        "# Dados fornecidos\n",
        "data = {\n",
        "    \"Nome\": [\"Maria Silva\", \"João Santos\", \"Ana Pereira\", \"Pedro Oliveira\", \"Luiza Almeida\"],\n",
        "    \"E-mail\": [\"maria.silva@email.com\", \"joao.santos@email.com\", \"ana.pereira@email.com\",\n",
        "               \"pedro.oliveira@email.com\", \"luiza.almeida@email.com\"],\n",
        "    \"Telefone\": [\"(11) 91234-5678\", \"(21) 92345-6789\", \"(31) 93456-7890\",\n",
        "                 \"(41) 94567-8901\", \"(51) 95678-9012\"],\n",
        "    \"Curso\": [\"Maquiagem Profissional\", \"Penteados\", \"Unhas Artísticas\", \"Estética Facial\", \"Corte e Coloração\"],\n",
        "    \"Custo (R$)\": [900, 700, 500, 1500, 850],\n",
        "    \"Custo com Desconto (R$)\": [720, 560, 400, 1200, 680],\n",
        "    \"Data de Inscrição\": [\"15/09/2024\", \"20/09/2024\", \"25/09/2024\", \"01/10/2024\", \"05/10/2024\"]\n",
        "}\n",
        "\n",
        "# Criando o DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Limpeza e pré-processamento básico\n",
        "df[\"Custo com Desconto Esperado (R$)\"] = df[\"Custo (R$)\"] * 0.8\n",
        "df[\"Desconto Correto\"] = np.where(df[\"Custo com Desconto (R$)\"] == df[\"Custo com Desconto Esperado (R$)\"], \"Correto\", \"Incorreto\")\n",
        "\n",
        "# Gerando a matriz de confusão\n",
        "conf_matrix = confusion_matrix(df[\"Desconto Correto\"], [\"Correto\"] * len(df), labels=[\"Correto\", \"Incorreto\"])\n",
        "\n",
        "# Plotando a matriz de confusão\n",
        "sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", xticklabels=[\"Correto\"], yticklabels=[\"Correto\", \"Incorreto\"])\n",
        "plt.xlabel(\"Valor Esperado\")\n",
        "plt.ylabel(\"Valor Real\")\n",
        "plt.title(\"Matriz de Confusão para Verificação de Consistência de Descontos\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "EMyocabKKuB5",
        "outputId": "d0e92689-ef83-4c8e-e6bb-f7b26bd88fc7"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
